---
import Start from "../components/icons/Start.astro";
import Layout from "../layouts/Layout.astro";
import { getProductsPost } from "../lib/wp.ts";

// Render inicial (página 1)
const posts = await getProductsPost({ perPage: 10, page: 1 });
---

<Layout
  title="Cursos - Boveda de Cursos"
  description="Página de todos los cursos que se encuentran disponibles en la plataforma"
>
  <section class="bg-white p-10 md:p-10 relative m-auto">
    <div
      id="products"
      class="max-w-[1300px] m-auto grid grid-cols-1 md:grid-cols-4 mt-20 gap-5"
    >
      {posts.map((news: any) => (
        <div class="flex flex-col justify-between max-h-[700px] bg-white rounded-2xl shadow-md p-4 transition-transform duration-300 hover:-translate-y-2">
          <a href={`/Curso/${news.slug}`} class="space-y-2">
            <div class="w-full rounded-t-2xl overflow-hidden">
              <img
                class="w-full h-auto object-contain"
                src={news.imageSrcs[0]}
                alt={news.name}
              />
            </div>
            <p class="text-lg font-semibold">{news.name}</p>
            <div class="flex text-amber-300">
              <Start />
              <Start />
              <Start />
              <Start />
              <Start />
            </div>
          </a>

          <div class="mt-auto space-y-3">
            <div class="flex gap-2">
              <span class="line-through text-gray-400">
                $. {parseFloat(news?.regular_price).toFixed(2)}
              </span>
              <span class="text-gray-900 font-semibold">
                $. {parseFloat(news?.price).toFixed(2)}
              </span>
            </div>

            <button
              type="button"
              class="add-to-cart w-full py-2.5 px-5 text-sm focus:outline-none bg-white rounded-lg border border-black hover:bg-black hover:text-white focus:z-10 focus:ring-4 focus:ring-gray-100"
            >
              Agregar al carrito
            </button>
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- PAGINACIÓN -->
  <section class="flex justify-center items-center bg-white p-10 md:p-10 relative m-auto">
    <nav aria-label="Page navigation example">
      <ul id="pagination" class="inline-flex -space-x-px text-sm">
        <li><a href="#" data-page="prev" class="page-link flex items-center justify-center px-3 h-8 border border-gray-300 rounded-s-lg hover:bg-gray-100">Previous</a></li>
        <li><a href="#" data-page="1" class="page-link flex items-center justify-center px-3 h-8 border border-gray-300 hover:bg-gray-100">1</a></li>
        <li><a href="#" data-page="2" class="page-link flex items-center justify-center px-3 h-8 border border-gray-300 hover:bg-gray-100">2</a></li>
        <li><a href="#" data-page="3" class="page-link flex items-center justify-center px-3 h-8 border border-gray-300 hover:bg-gray-100">3</a></li>
        <li><a href="#" data-page="next" class="page-link flex items-center justify-center px-3 h-8 border border-gray-300 rounded-e-lg hover:bg-gray-100">Next</a></li>
      </ul>
    </nav>
  </section>

  <!-- SCRIPT CLIENTE -->
  <script class="">
    import { getProductsPost } from "../lib/wp.ts";

    const productsContainer = document.getElementById("products");
    const pagination = document.getElementById("pagination");

    let currentPage = 1;
    const perPage = 10;

    // 🔄 Función para renderizar productos dinámicamente
    const renderProducts = (products) => {
      productsContainer.innerHTML = products
        .map(
          (p) => `
          <div class="flex flex-col justify-between max-h-[700px] bg-white rounded-2xl shadow-md p-4 transition-transform duration-300 hover:-translate-y-2">
            <a href="/Curso/${p.slug}" class="space-y-2">
              <div class="w-full rounded-t-2xl overflow-hidden">
                <img class="w-full h-auto object-contain" src="${p.imageSrcs[0]}" alt="${p.name}" />
              </div>
              <p class="text-lg font-semibold">${p.name}</p>
              <div class="flex text-amber-300">
                ${"<svg xmlns='http://www.w3.org/2000/svg' fill='currentColor' class='w-4 h-4 text-amber-300' viewBox='0 0 20 20'><path d='M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.959a1 1 0 00.95.69h4.162c.969 0 1.371 1.24.588 1.81l-3.37 2.45a1 1 0 00-.364 1.118l1.287 3.959c.3.921-.755 1.688-1.54 1.118l-3.37-2.45a1 1 0 00-1.175 0l-3.37 2.45c-.784.57-1.838-.197-1.539-1.118l1.286-3.959a1 1 0 00-.364-1.118l-3.37-2.45c-.783-.57-.38-1.81.588-1.81h4.162a1 1 0 00.95-.69l1.286-3.959z'/></svg>".repeat(
                  5
                )}
              </div>
            </a>
            <div class="mt-auto space-y-3">
              <div class="flex gap-2">
                <span class="line-through text-gray-400">$. ${parseFloat(
                  p.regular_price
                ).toFixed(2)}</span>
                <span class="text-gray-900 font-semibold">$. ${parseFloat(
                  p.price
                ).toFixed(2)}</span>
              </div>
              <button type="button" class="add-to-cart w-full py-2.5 px-5 text-sm bg-white rounded-lg border border-black hover:bg-black hover:text-white">Agregar al carrito</button>
            </div>
          </div>`
        )
        .join("");
    };

    // 🔁 Cargar productos de una página
    const loadPage = async (page) => {
      try {
        const products = await getProductsPost({ perPage, page });
        renderProducts(products);
        currentPage = page;
      } catch (error) {
        console.error("Error cargando productos:", error);
      }
    };

    // 📲 Evento de paginación
    pagination.addEventListener("click", (e) => {
      e.preventDefault();
      const target = e.target.closest("a");
      if (!target) return;
      const value = target.dataset.page;

      if (value === "prev" && currentPage > 1) {
        loadPage(currentPage - 1);
      } else if (value === "next") {
        loadPage(currentPage + 1);
      } else if (!isNaN(value)) {
        loadPage(Number(value));
      }
    });
  </script>
</Layout>
