---
import Layout from "../layouts/Layout.astro";
import CursoItem from "../components/Curso-Item.astro";
---

<Layout
  title="boveda de cursos"
  description="Pagina de todos los cursos que se encuentran disponibles"
>
  <section class="bg-white p-10 md:p-10 relative">
    <div class="max-w-[1300px] flex flex-col gap-4 mt-30 md:mt-40 m-auto">
      <div class="flex justify-between items-center">
        <samp class="text-2xl md:text-5xl"> Tu carrito</samp>
        <a
          href="/Cursos"
          class="text-[12px] md:text-[16px] underline underline-offset-4 hover:text-blue-400 hover:decoration-blue-400 hover:decoration-2"
        >
          Seguir Comprando
        </a>
      </div>
      <div class="flex flex-col-reverse md:flex-row w-full gap-x-10">
        <div class="grow-3">
          <div class="text-gray-400 text-sm mb-5">
            <p><span id="contador-carrito">0</span> CURSOS EN LA CESTA</p>
          </div>
          <CursoItem />
          <div
            id="carrito-container"
            class="space-y-6 divide-y divide-gray-200"
          >
          </div>
        </div>
        <div class="grow">
          <div id="resumen-carrito" class="flex flex-col mb-5 md:mb-0">
            <p class="text-gray-400 text-sm mb-2">TOTAL</p>
            <h3 id="total-actual" class="text-black font-bold">S/. 0,00</h3>
            <span id="total-anterior" class="text-gray-500 text-sm line-through"
              >S/. 0,00</span
            >
            <p
              id="descuento-texto"
              class="text-green-600 text-sm font-semibold"
            >
              0% de descuento
            </p>
            <div class="mt-2">
              <button
                type="button"
                class="w-full py-2.5 px-5 text-sm focus:outline-none bg-white rounded-sm border border-black hover:bg-black hover:text-white focus:z-10 focus:ring-4 focus:ring-gray-100"
                >Proceder a pagar</button
              >
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <script type="module">
    document.addEventListener("DOMContentLoaded", () => {
      const carrito = JSON.parse(localStorage.getItem("carrito")) || [];
      const template = document.querySelector(".curso-item-template");
      const container = document.getElementById("carrito-container");
      const contador = document.getElementById("contador-carrito");
      const resumen = document.getElementById("resumen-carrito");

      const totalActualEl = document.getElementById("total-actual");
      const totalAnteriorEl = document.getElementById("total-anterior");
      const descuentoTextoEl = document.getElementById("descuento-texto");

      contador.textContent = carrito.length;
      container.innerHTML = ""; // Limpia antes de volver a renderizar

      if (!template) {
        console.error("No se encontró la plantilla .curso-item-template");
        return;
      }
      if (carrito.length === 0) {
        container.innerHTML = "<p>No hay productos en el carrito.</p>";
        actualizarTotales([]);
        resumen.style.display = "none"; 
        return;
      } else {
        carrito.forEach((curso) => {
          const clone = template.cloneNode(true);
          clone.classList.remove("hidden", "curso-item-template");

          clone.querySelector(".curso-imagen").src = curso.Portada;
          clone.querySelector(".curso-imagen").alt = curso.titulo;
          clone.querySelector(".curso-titulo").textContent = curso.titulo;
          clone.querySelector(".curso-precioactual").textContent =
            `S/ ${parseFloat(curso.PrecioActual).toFixed(2)}`;

          clone.querySelector(".curso-precioanterior").textContent =
            `S/ ${parseFloat(curso.PrecioAnterior).toFixed(2)}`;

          const estrellas = clone.querySelector(".curso-estrellas");
          estrellas.innerHTML = `
          ${'<svg class="w-4 h-4 fill-current" viewBox="0 0 24 24"><path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.849 1.524 8.278L12 18.896l-7.46 4.537 1.524-8.278-6.064-5.849 8.332-1.151z"/></svg>'.repeat(
            4,
          )}
          <svg class="w-4 h-4 fill-current" viewBox="0 0 24 24">
            <defs>
              <linearGradient id="half">
                <stop offset="50%" stop-color="currentColor"/>
                <stop offset="50%" stop-color="transparent"/>
              </linearGradient>
            </defs>
            <path fill="url(#half)" d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.849 1.524 8.278L12 18.896l-7.46 4.537 1.524-8.278-6.064-5.849 8.332-1.151z"/>
          </svg>
        `;

          // Eliminar del carrito
          clone
            .querySelector(".curso-eliminar")
            .addEventListener("click", (e) => {
              e.preventDefault();

              // Actualiza el carrito en memoria
              const nuevoCarrito = JSON.parse(
                localStorage.getItem("carrito"),
              ).filter((item) => item.id !== curso.id);
              contador.textContent = nuevoCarrito.length;
              // Guarda el nuevo carrito
              localStorage.setItem("carrito", JSON.stringify(nuevoCarrito));

              // Elimina el elemento visualmente
              clone.remove();

              // Si está vacío, muestra mensaje
              if (nuevoCarrito.length === 0) {
                resumen.style.display = "none"; 
                container.innerHTML = "<p>No hay productos en el carrito.</p>";
                actualizarTotales([]);
              }
              actualizarTotales(nuevoCarrito);
            });

          container.appendChild(clone);
        });

        actualizarTotales(carrito);
      }

      // Función para actualizar el bloque de totales
        function actualizarTotales(carrito) {
          let totalActual = 0;
          let totalAnterior = 0;

          carrito.forEach(curso => {
            totalActual += parseFloat(curso.PrecioActual) || 0;
            totalAnterior += parseFloat(curso.PrecioAnterior) || 0;
          });

          totalActualEl.textContent = `S/ ${totalActual.toFixed(2)}`;
          totalAnteriorEl.textContent = `S/ ${totalAnterior.toFixed(2)}`;

          if (totalAnterior > 0) {
            const descuento = ((totalAnterior - totalActual) / totalAnterior) * 100;
            descuentoTextoEl.textContent = `${descuento.toFixed(0)}% de descuento`;
          } else {
            descuentoTextoEl.textContent = '0% de descuento';
          }
        }
    });
  </script>
</Layout>
