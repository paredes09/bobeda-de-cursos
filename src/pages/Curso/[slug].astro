---
import Layout from "../../layouts/Layout.astro";
import LoginModal from "../../components/Login-Modal.astro";

import {getPostInfo,postAddToCart } from "../../lib/wp.js";

const slug = Astro.params.slug;
if (!slug) throw new Error("/404");
const posts = await getPostInfo(slug);
const date = posts[0];

---

<Layout
  title={date.name}
  description="Pagina de todos los cursos que se encuentran disponibles"
>



  <section class="bg-white p-10 md:p-10 relative">
    <div class="max-w-[1300px] flex flex-col md:flex-row gap-4 mt-20 m-auto">
      <div class="flex flex-col-reverse md:flex-row gap-4">
      
        
        <ul
        id="thumbnailList"
        class="flex flex-row md:flex-col overflow-x-auto md:overflow-y-auto md:overflow-x-hidden rounded-lg gap-2 md:h-[55vh] md:w-[150px] scroll-hidden"
      >
        {date.imageSrcs.map((src: any) => (
          <li class="flex-shrink-0">
            <img
              class="thumbnail w-[80px] md:w-[150px] h-[80px] md:h-[100px] object-fill rounded cursor-pointer"
              src={src}
              alt=""
              data-full={src}
            />
          </li>
        ))}
      </ul>
        
      <div class="w-full min-w-[300px] md:w-[600px] h-[30vh] md:h-[55vh] overflow-hidden rounded-lg bg-white">
        <a
          href={date.imageSrcs[0]}
          id="mainImageLink"
          class="block w-full h-full"
        >
          <img
            id="mainImage"
            class="w-full h-full object-fill"
            src={date.imageSrcs[0]}
            alt=""
          />
        </a>
      </div>
      </div>
      

      <div class="space-y-3">
        <h3 class="font-bold">
          {date.name}
        </h3>
        <div class="flex gap-2">
          <span class="line-through text-gray-400">
            S/ {parseFloat(date.regular_price).toFixed(2)}
          </span>
          <span class="text-gray-900 font-semibold">
            S/ {parseFloat(date.price).toFixed(2)}
          </span> 
        </div>
        <strong>Información del curso:</strong>
        <ul class="list-disc list-inside pl-7">
          <li>
            Número de pedido (lo encuentras en la sección “Mi Cuenta &gt;
            Pedidos”).
          </li>
          <li>Nombre del curso adquirido.</li>
          <li>Motivo detallado por el cual solicitas el reembolso.</li>
          <li>
            Evidencia (si aplica): capturas, video o descripción técnica del
            problema.
          </li>
        </ul>
        <div class="md:flex gap-5 space-y-5 md:space-y-0 ">
          <button
          type="button"
          class="add-buy-now w-full py-2.5 px-5 text-sm focus:outline-none bg-white rounded-lg border border-black hover:bg-black hover:text-white focus:z-10 focus:ring-4 focus:ring-gray-100"
          data-curso={JSON.stringify('detalleCurso')}
          ></button>
          <button
          type="button"
          class="add-to-cart w-full py-2.5 px-5 text-sm focus:outline-none bg-white rounded-lg border border-black hover:bg-black hover:text-white focus:z-10 focus:ring-4 focus:ring-gray-100"
          data-cursos={JSON.stringify('detalleCurso')}
          >Agregar al carrito</button>
          <button id="btn-add-cart" data-id={date.id}>Nuevo Carrito pe</button>
        </div>
        
        <div class="mt-6">
          <span class="text-lg font-bold text-gray-700">Paga mediante:</span>
          <div class="flex items-center justify-between ">
            <div class="w-[50px] md:w-[80px]">
              <img src="../../img/mc.svg" alt="">
            </div>
            <div class="w-[50px] md:w-[80px] my-0">
              <img src="../../img/visa.svg" alt="">
            </div>
            <div class="w-[70px] md:w-[130px] my-0">
              <img src="../../img/paypal1.svg" alt="">
            </div>
            <div class="w-[70px] md:w-[130px] my-0">
              <img src="../../img/binance.svg" alt="">
            </div>
          </div>
        </div>
        
      </div>
    </div>
  </section>
  
  <section class="bg-white px-10 md:px-10 relative">
    <div class="max-w-[1300px] m-auto">
      <div class="border-b border-gray-100">
        <ul
          class="flex flex-wrap -mb-px text-sm font-medium text-center text-gray-500 dark:text-gray-400"
          id="tabs"
        >
          <li class="me-2">
            <button
              data-tab="descripcion"
              class="tab-btn inline-flex items-center justify-center p-4 text-blue-600 border-b-2 border-blue-600 rounded-t-lg hover:text-gray-600 hover:border-gray-300"
            >
              Descripción
            </button>
          </li>
          <li class="me-2">
            <button
              data-tab="temario"
              class="tab-btn inline-flex items-center justify-center p-4 border-b-2 border-transparent rounded-t-lg hover:text-gray-600 hover:border-gray-300"
            >
              Temario
            </button>
          </li>
          <!-- <li class="me-2">
            <button
              data-tab="opiniones"
              class="tab-btn inline-flex items-center justify-center p-4 border-b-2 border-transparent rounded-t-lg hover:text-gray-600 hover:border-gray-300"
            >
              Opiniones
            </button>
          </li> -->
        </ul>
      </div>
      <!-- Contenedores de contenido -->
      <div class="py-10">
        <div
          id="descripcion"
          class="tab-content flex bg-black/5 rounded-sm text-black " 
        >
          <div class="p-7 space-y-5">
            <h3 class="font-bold">Con tu compra Obtienes</h3>
            <ul class="list-disc list-inside pl-7">
              <li>
                <strong>Acceso inmediato</strong> - Comienza al instante, sin
                esperas.
              </li>
              <li>
                <strong>Acceso de por vida</strong> - Comienza al instante, sin
                esperas.
              </li>
              <li>
                <strong>Calidad garantizada</strong> - Comienza al instante, sin
                esperas.
              </li>
            </ul>
            <p>
              Disfruta de todo el contenido al instante y para siempre, con un
              único pago.
            </p>
          </div>
        </div>
        <div id="temario"  class="tab-content w-full bg-black/5 rounded-sm text-black hidden" >
          <div class=" p-7 space-y-5">
            <h3 class="font-bold">Temario del curso</h3>
            <p>31 Módulos</p>

              <div class="border border-slate-200 p-3 bg-white rounded-sm">
                <button onclick="toggleAccordion(1);" class="text-start w-full flex justify-between items-center text-slate-800">
                  <span>Modulo 1</span>
                  <span id="icon-1" class="text-slate-800 transition-transform duration-300">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4">
                      <path d="M8.75 3.75a.75.75 0 0 0-1.5 0v3.5h-3.5a.75.75 0 0 0 0 1.5h3.5v3.5a.75.75 0 0 0 1.5 0v-3.5h3.5a.75.75 0 0 0 0-1.5h-3.5v-3.5Z" />
                    </svg>
                  </span>
                </button>
                <div id="content-1" class="max-h-0 overflow-hidden transition-all duration-300 ease-in-out">
                  <div class="pb-5 text-sm text-slate-500 mt-5">
                    Contenido privado, disponible solo para nuestro clientes.
                  </div>
                </div>
              </div>

              <!-- Accordion Item 2 -->
              <div class="border border-slate-200 p-3 bg-white rounded-sm">
                <button onclick="toggleAccordion(2);" class="text-start w-full flex justify-between items-center text-slate-800">
                  <span>How to use Material Tailwind?</span>
                  <span id="icon-2" class="text-slate-800 transition-transform duration-300">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4">
                      <path d="M8.75 3.75a.75.75 0 0 0-1.5 0v3.5h-3.5a.75.75 0 0 0 0 1.5h3.5v3.5a.75.75 0 0 0 1.5 0v-3.5h3.5a.75.75 0 0 0 0-1.5h-3.5v-3.5Z" />
                    </svg>
                  </span>
                </button>
                <div id="content-2" class="max-h-0 overflow-hidden transition-all duration-300 ease-in-out">
                  <div class="pb-5 text-sm text-slate-500 mt-5">
                    You can use Material Tailwind by importing its components into your Tailwind CSS project.
                  </div>
                </div>
              </div>

               <!-- Accordion Item 3 -->
                <div class="border border-slate-200 p-3 bg-white rounded-sm">
                  <button onclick="toggleAccordion(3);" class="text-start w-full flex justify-between items-center text-slate-800">
                    <span>What can I do with Material Tailwind?</span>
                    <span id="icon-3" class="text-slate-800 transition-transform duration-300">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4">
                        <path d="M8.75 3.75a.75.75 0 0 0-1.5 0v3.5h-3.5a.75.75 0 0 0 0 1.5h3.5v3.5a.75.75 0 0 0 1.5 0v-3.5h3.5a.75.75 0 0 0 0-1.5h-3.5v-3.5Z" />
                      </svg>
                    </span>
                  </button>
                  <div id="content-3" class="max-h-0 overflow-hidden transition-all duration-300 ease-in-out">
                    <div class="pb-5 text-sm text-slate-500 mt-5">
                      Material Tailwind allows you to quickly build modern, responsive websites with a focus on design.
                      
                    </div>
                  </div>
                </div>

            </div>
          </div>

        <div id="opiniones" class="tab-content hidden">
          <p>Aquí van las opiniones de los estudiantes.</p>
        </div>
      </div>
    </div>
  </section>
    <!-- contenido del modal -->
    <LoginModal/>
  
    
    <script type="module">
      import { setupAddToCart } from "/src/scripts/add-to-cart.ts";
      setupAddToCart("#btn-add-cart");
    </script>
 
</Layout>

<style>
  .scroll-hidden::-webkit-scrollbar {
  display: none;
}

.scroll-hidden {
  -ms-overflow-style: none; /* IE y Edge */
  scrollbar-width: none; /* Firefox */
}
</style>

// scrip del temario
<script is:inline>
  const plusSVG = `
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4">
      <path d="M8.75 3.75a.75.75 0 0 0-1.5 0v3.5h-3.5a.75.75 0 0 0 0 1.5h3.5v3.5a.75.75 0 0 0 1.5 0v-3.5h3.5a.75.75 0 0 0 0-1.5h-3.5v-3.5Z" />
    </svg>
  `;

  const minusSVG = `
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="w-4 h-4">
      <path d="M3.75 7.25a.75.75 0 0 0 0 1.5h8.5a.75.75 0 0 0 0-1.5h-8.5Z" />
    </svg>
  `;

  function toggleAccordion(index) {
    const currentContent = document.getElementById(`content-${index}`);
    const currentIcon = document.getElementById(`icon-${index}`);
    const isOpen = currentContent.style.maxHeight && currentContent.style.maxHeight !== '0px';

    // Cerrar todos
    document.querySelectorAll('[id^="content-"]').forEach(content => {
      content.style.maxHeight = '0';
    });

    document.querySelectorAll('[id^="icon-"]').forEach(icon => {
      icon.innerHTML = plusSVG;
    });

    // Abrir solo si estaba cerrado
    if (!isOpen) {
      currentContent.style.maxHeight = currentContent.scrollHeight + 'px';
      currentIcon.innerHTML = minusSVG;
    }
  }
</script>


<script>
  const tabButtons = document.querySelectorAll(".tab-btn");
  const tabContents = document.querySelectorAll(".tab-content");

  tabButtons.forEach((button) => {
    button.addEventListener("click", () => {
      const tabId = button.getAttribute("data-tab")!;

      // Quitar clases activas a todos los botones
      tabButtons.forEach((btn) => {
        btn.classList.remove(
          "text-blue-600",
          "border-blue-600",
          "dark:text-blue-500",
          "dark:border-blue-500",
        );
        btn.classList.add("text-gray-500", "border-transparent");
      });

      // Ocultar todo el contenido
      tabContents.forEach((content) => {
        content.classList.add("hidden");
      });

      // Activar el botón actual
      button.classList.add("text-blue-600", "border-blue-600");
      button.classList.remove("text-gray-500", "border-transparent");

      // Mostrar contenido relacionado
      document.getElementById(tabId)!.classList.remove("hidden");
    });
  });
</script>

<script>
  const thumbnails = document.querySelectorAll(".thumbnail");
  const mainImage = document.querySelector<HTMLImageElement>("#mainImage")!;
  const mainImageLink =
    document.querySelector<HTMLAnchorElement>("#mainImageLink")!;

  function updateActiveThumbnail(activeSrc: string) {
    thumbnails.forEach((thumb) => {
      const thumbEl = thumb as HTMLImageElement;
      if (thumbEl.getAttribute("data-full") === activeSrc) {
        thumbEl.classList.remove("opacity-50");
      } else {
        thumbEl.classList.add("opacity-50");
      }
    });
  }

  thumbnails.forEach((thumb) => {
    thumb.addEventListener("click", () => {
      const newSrc = (thumb as HTMLImageElement).getAttribute("data-full")!;
      mainImage.src = newSrc;
      mainImageLink.href = newSrc;
      updateActiveThumbnail(newSrc);
    });
  });

  updateActiveThumbnail(mainImage.src);
</script>


// Agregar al carrito


<script class:list="">

  import agregarAlCarrito from "../../utils/Add-Shopping-Card.js";

  document.addEventListener('DOMContentLoaded', () => {
    const botones = document.querySelectorAll('.add-to-cart');

    botones.forEach((btn) => {
      btn.addEventListener('click', () => {
        const curso = JSON.parse(btn.getAttribute('data-cursos'));
        agregarAlCarrito(curso);
      });
    });
  });
</script>

// Compra rapida, no agrega al carrito, va directo a checkout
<script class:list="">
  import comprarAhora from '../../utils/Buy-Now.js';
  document.addEventListener('DOMContentLoaded', async () => {
    const botones = document.querySelectorAll('.add-buy-now');
    const modalOverlay = document.getElementById('modalOverlay');
    const closeModalBtn = document.getElementById('closeModal');

    // Cerrar el modal al hacer clic en la X
    if (closeModalBtn && modalOverlay) {
      closeModalBtn.addEventListener('click', () => {
        modalOverlay.classList.add('hidden');
      });
    }
    const res = await fetch("/api/auth/verificar-sesion");
    const { autenticado } = await res.json();
    

    botones.forEach((btn) => {
      btn.textContent = autenticado ? "Comprar ahora" : "Inicia sesión para comprar";
      btn.addEventListener('click', () => {
        
        const curso = JSON.parse(btn.getAttribute('data-curso'));
         
        if (autenticado) {
          // Usuario autenticado → ejecutar acción
          comprarAhora(curso);
        } else {
          // Usuario no autenticado → mostrar modal
          if (modalOverlay) {
            modalOverlay.classList.remove('hidden');
            modalOverlay.classList.add('flex'); // o 'block' según tu diseño
          } else {
            console.warn('No se encontró el modal de login');
          }
        }

      });
    });
  });
</script>
