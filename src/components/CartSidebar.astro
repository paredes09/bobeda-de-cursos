---
import Shopping_cart from "./icons/Shopping-cart.astro";
---
<div id="overlay"
  class="hidden fixed inset-0 bg-black/40 z-[90] "
  onclick="closeCart();"></div>

<!-- Sidebar del carrito -->
<div id="cartSidebar"

  class="fixed top-0 right-0 h-full w-72 md:w-96 bg-white shadow-xl translate-x-full transition-transform duration-300 z-[100] flex flex-col p-4 overflow-y-auto">
  <div class="flex justify-between items-center pb-3 border-b border-gray-200">
    <h2 class="text-xl font-bold text-gray-800 tracking-tight">Carrito de compras
    </h2>
    <button 
      onclick="closeCart();" 
      class="text-gray-400 hover:text-red-500 transition-all duration-200 text-2xl font-light"
      aria-label="Cerrar carrito">
      ✖
    </button>
  </div>
  

  <hr class="my-3" />

  <!-- Contenido dinámico del carrito -->
  <div id="cartItems" class="flex flex-col gap-2">
    <p class="text-gray-500">Cargando carrito...</p>
  </div>
</div>

<!-- Botón global de abrir -->
  <button
    class="relative text-gray-700 hover:text-black"
    onclick="openCart()">
    <Shopping_cart class="size-8 inline-block" />
    <span
      id="cart-count"
      class="absolute -top-2 -right-2 bg-red-600 text-white text-xs font-bold px-2 py-0.5 rounded-full">
      0
    </span>
  </button>

<!-- Scripts embebidos -->
<script class="">
  import { getCart } from "../lib/wp.ts";

  let cartItems = [];

  // ✅ Cargar carrito en el cliente apenas se abre la página
  async function loadCart() {
    try {
      cartItems = await getCart(); // Llamada fetch al backend
      renderCartItems();
      updateCartBadge();
    } catch (error) {
      document.getElementById("cartItems").innerHTML =
        '<p class="text-gray-500">Error al cargar el carrito.</p>';
    }
  }

  // ✅ Renderizar productos dentro del sidebar
  function renderCartItems() {
    const container = document.getElementById("cartItems");
    container.innerHTML = ""; // limpiar contenido

    if (!cartItems || cartItems.length === 0) {
      container.innerHTML = '<p class="text-gray-500">No products in the cart.</p>';
      return;
    }

    cartItems.forEach((item) => {
      container.innerHTML += `
      <div class="flex items-center gap-3 p-3 rounded-xl shadow-md bg-white hover:shadow-lg transition-all">
        <img 
          src="${item.imageSrc}" 
          alt="${item.name}" 
          class="w-14 h-14 md:w-16 md:h-16 object-cover rounded-lg"
        />
        
        <div class="flex-1">
          <p class="text-sm md:text-base font-semibold text-gray-700 leading-tight">${item.name}</p>
          <p class="text-xs md:text-sm text-gray-500">Cantidad: <span class="font-bold text-gray-700">${item.quantity}</span></p>
        </div>

        <button 
          class="text-gray-400 hover:text-red-500 transition text-lg"
          onclick="removeItem('${item.id}')"
        >
          ✖
        </button>
      </div>

      `;
    });
  }

  // ✅ Actualiza la burbuja del ícono del carrito
  function updateCartBadge() {
    const badge = document.getElementById("cart-count");
    if (cartItems.length > 0) {
      badge.textContent = cartItems.length;
      badge.classList.remove("hidden");
    } else {
      badge.classList.add("hidden");
    }
  }

  // ✅ Ejecutamos al cargar la página
  loadCart();

  // ✅ Funciones para abrir y cerrar el carrito
  window.openCart = () => {
    document.getElementById('cartSidebar')?.classList.remove('translate-x-full');
    document.getElementById('overlay')?.classList.remove('hidden');
  };

  window.closeCart = () => {
    document.getElementById('cartSidebar')?.classList.add('translate-x-full');
    document.getElementById('overlay')?.classList.add('hidden');
  };
</script>
